{"version":3,"sources":["VideoFooter.js","VideoSideBar.js","Videos.js","axios.js","App.js","reportWebVitals.js","index.js"],"names":["VideoFooter","channel","description","song","className","mode","index","Fragment","src","alt","VideoSideBar","likes","shares","messages","useState","liked","setLiked","fontSize","onClick","e","Videos","url","playing","setPlaying","videoRef","useRef","loop","ref","current","pause","play","instance","axios","create","baseURL","App","videos","setVideos","useEffect","a","get","response","data","fetchPosts","console","log","map","_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16455edb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './VideoFooter.css'\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport Ticker from 'react-ticker';\r\n\r\nfunction VideoFooter({ channel, description, song }) {\r\n    return (\r\n        <div className='videoFooter'>\r\n            <div className='videoFooter__text'>\r\n                <h3>@{channel}</h3>\r\n                <p>{description}</p>\r\n\r\n                <div className='videoFooter__ticker'>\r\n\r\n                    <MusicNoteIcon className='videoFooter__icon' />\r\n                    <Ticker mode='smooth'>\r\n                        {({ index }) => (\r\n                            <React.Fragment>\r\n                                <p>{song}</p>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Ticker>\r\n                </div>\r\n            </div>\r\n            <img className='videoFooter__record'\r\n                src=\"https://static.thenounproject.com/png/934821-200.png\"\r\n                alt='record'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoFooter\r\n","import React, { useState } from 'react'\r\nimport './VideoSidebar.css'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nfunction VideoSideBar({ likes, shares, messages }) {\r\n    const [liked, setLiked] = useState(false)\r\n    return (\r\n        <div className='videoSidebar'>\r\n            <div className='videoSidebar__button'>\r\n                {\r\n                    liked ? (\r\n                        <FavoriteIcon fontSize='large'\r\n                            onClick={(e) => setLiked(false)}\r\n                        />\r\n                    ) : (\r\n                            <FavoriteBorderIcon\r\n                                fontSize='large'\r\n                                onClick={(e) => setLiked(true)}\r\n                            />\r\n                        )\r\n                }\r\n\r\n                <p>{liked ? likes + 1 : likes}</p>\r\n            </div>\r\n\r\n            <div className='videoSidebar__button'>\r\n                <MessageIcon fontSize='large' />\r\n                <p>{messages}</p>\r\n            </div>\r\n\r\n            <div className='videoSidebar__button'>\r\n                <ShareIcon fontSize='large' />\r\n                <p>{shares}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoSideBar\r\n","import React, { useRef, useState } from 'react'\r\nimport './Videos.css'\r\nimport VideoFooter from './VideoFooter'\r\nimport VideoSideBar from './VideoSideBar'\r\n\r\n\r\nfunction Videos({ url, channel, description, song, likes, messages, shares }) {\r\n    const [playing, setPlaying] = useState(false)\r\n    const videoRef = useRef(null)\r\n\r\n    const handleVideoPress = () => {\r\n        // if video is playing stop it..\r\n        if (playing) {\r\n            videoRef.current.pause();\r\n            setPlaying(false);\r\n\r\n        } else {\r\n            // otherwise if its not playing play it..\r\n            videoRef.current.play();\r\n            setPlaying(true)\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className='video'>\r\n            <video\r\n                className='video__player'\r\n                loop\r\n                ref={videoRef}\r\n                onClick={handleVideoPress}\r\n                src={url}\r\n            ></video>\r\n            { /*videofooter*/}\r\n            <VideoFooter\r\n                channel={channel}\r\n                description={description}\r\n                song={song}\r\n            />\r\n            {/*videosidebar*/}\r\n            <VideoSideBar\r\n                likes={likes}\r\n                shares={shares}\r\n                messages={messages}\r\n\r\n            />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Videos\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://tiktok-mern-backend-vj.herokuapp.com/'\r\n})\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Videos from './Videos';\nimport axios from './axios'\n\n\nfunction App() {\n  const [videos, setVideos] = useState([])\n  useEffect(() => {\n    async function fetchPosts() {\n      const response = await axios.get('/v2/posts');\n      setVideos(response.data)\n      return response;\n\n    }\n    fetchPosts();\n  }, []);\n  console.log(videos);\n  return (\n    <div className=\"app\">\n      {/* videos */}\n      <div className='app__video'>\n        {videos.map(({ _id, url, channel, description, song, likes, messages, shares }) => {\n          return (\n            <Videos\n              key={_id}\n              url={url}\n              channel={channel}\n              song={song}\n              likes={likes}\n              messages={messages}\n              description={description}\n              shares={shares}\n\n\n            />\n          )\n\n        })}\n\n\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}